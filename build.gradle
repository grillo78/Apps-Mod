buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
repositories {
	maven { url "https://mrcrayfish.com/maven" }
	maven { url "http://maven.teamdev.com/repository/products" }
	jcenter()
}

version = "1.6.2"
group = "com.grillo78.appsmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "appsmod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2772"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

shadowJar {
	dependencies{
		exclude 'mcef-1.12.2-0.9-api.jar'
		exclude(dependency('com.mrcrayfish:device-api:0.4.0-1.12.2'))
	}
	relocate 'org.apache', 'shadow.apache'
	relocate 'org.slf4j', 'shadow.slf4j'
	relocate 'org.json', 'shadow.json'
	classifier '' // Replace the default JAR
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}

dependencies {
    // you may put jars on which you depend on in ./libss
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-libsrary:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile 'org.jsoup:jsoup:1.11.3'
	//compile 'com.google.apis:google-api-services-youtube:v3-rev206-1.25.0'
	//compile ('net.dv8tion:JDA:3.8.3_460'){
	//	exclude module: 'opus-java'
	//}
	compile fileTree(dir: "lib", includes: ['*.jar'])
	compile 'com.mrcrayfish:device-api:0.4.0-1.12.2'

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
